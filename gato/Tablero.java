/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gato;

import java.applet.AudioClip;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import principal.Ventana;

/**
 *
 * @author Bryam
 */
public class Tablero extends javax.swing.JFrame {

    AudioClip audio, audio1, inicio, victoria, perdio;
    private boolean ganador;//cuando hay un ganador sera verdadero
    private int empate;//cuenta los empates
    private boolean turno;//esta lleva el flujo de los turnos true = jugador1 ; false = jugador2
    private JButton btnNumero[];
    private Jugador jugador1;
    private Jugador jugador2;
    private Timer tiempo;

    /**
     * Creates new form Tablero
     */
    public Tablero() {
        initComponents();
        this.inicializarAtributos();
        this.setTitle("CHILDREN'S GAME - TIC TAC TOE (TRES EN RAYA)");
        setIconImage(new ImageIcon(getClass().getResource("/principal/logoM.png")).getImage());
        setSize(500, 600);
        this.setLocationRelativeTo(null);
        setResizable(false); 
        
        this.titulo.setVisible(true);
        tiempo = new Timer(120, new ClaseTimer());
        tiempo.start();   
    }

    private void inicializarAtributos() {

        this.ganador = false;
        this.empate = 1;
        this.turno = true;

        this.jugador1 = new Jugador();
        this.jugador2 = new Jugador();

        this.btnNumero = new JButton[9];
        this.btnNumero[0] = this.b1;
        this.btnNumero[1] = this.b2;
        this.btnNumero[2] = this.b3;
        this.btnNumero[3] = this.b4;
        this.btnNumero[4] = this.b5;
        this.btnNumero[5] = this.b6;
        this.btnNumero[6] = this.b7;
        this.btnNumero[7] = this.b8;
        this.btnNumero[8] = this.b9;

        for (int x = 0; x < btnNumero.length; x++) {
            this.btnNumero[x].setName(Integer.toString(x + 1));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcMousePanel1 = new jcMousePanel.jcMousePanel();
        pnlResultado1 = new javax.swing.JPanel();
        jug1 = new javax.swing.JLabel();
        res1 = new javax.swing.JLabel();
        pnlResultado2 = new javax.swing.JPanel();
        res2 = new javax.swing.JLabel();
        jug2 = new javax.swing.JLabel();
        b3 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        tit = new javax.swing.JLabel();
        titulo = new javax.swing.JLabel();
        panelCurves2 = new org.edisoncor.gui.panel.PanelCurves();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        cerrar = new javax.swing.JMenuItem();
        opciones = new javax.swing.JMenu();
        nuevoJ = new javax.swing.JMenuItem();
        limpiar = new javax.swing.JMenuItem();
        tuto = new javax.swing.JMenuItem();
        terminar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jcMousePanel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gato/gatoF.png"))); // NOI18N
        jcMousePanel1.setIconLogo(new javax.swing.ImageIcon(getClass().getResource("/principal/logoM.png"))); // NOI18N

        pnlResultado1.setBackground(new java.awt.Color(255, 255, 0));
        pnlResultado1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlResultado1.setForeground(new java.awt.Color(51, 51, 51));

        jug1.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jug1.setText("Jugador 1:");

        res1.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        res1.setText("0");

        javax.swing.GroupLayout pnlResultado1Layout = new javax.swing.GroupLayout(pnlResultado1);
        pnlResultado1.setLayout(pnlResultado1Layout);
        pnlResultado1Layout.setHorizontalGroup(
            pnlResultado1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultado1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jug1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(res1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlResultado1Layout.setVerticalGroup(
            pnlResultado1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultado1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlResultado1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jug1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(res1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pnlResultado2.setBackground(new java.awt.Color(51, 204, 0));
        pnlResultado2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        res2.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        res2.setText("0");

        jug2.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jug2.setText("Jugador 2: ");

        javax.swing.GroupLayout pnlResultado2Layout = new javax.swing.GroupLayout(pnlResultado2);
        pnlResultado2.setLayout(pnlResultado2Layout);
        pnlResultado2Layout.setHorizontalGroup(
            pnlResultado2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultado2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jug2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(res2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlResultado2Layout.setVerticalGroup(
            pnlResultado2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultado2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlResultado2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jug2)
                    .addComponent(res2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        b3.setBackground(new java.awt.Color(255, 255, 255));
        b3.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        b3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), new java.awt.Color(0, 0, 255)));
        b3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b2.setBackground(new java.awt.Color(255, 255, 255));
        b2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        b2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), new java.awt.Color(0, 0, 255)));
        b2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b4.setBackground(new java.awt.Color(255, 255, 255));
        b4.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        b4.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), new java.awt.Color(0, 0, 255)));
        b4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b5.setBackground(new java.awt.Color(255, 255, 255));
        b5.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        b5.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), new java.awt.Color(0, 0, 255)));
        b5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b6.setBackground(new java.awt.Color(255, 255, 255));
        b6.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        b6.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), new java.awt.Color(0, 0, 255)));
        b6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b9.setBackground(new java.awt.Color(255, 255, 255));
        b9.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        b9.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), new java.awt.Color(0, 0, 255)));
        b9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        b8.setBackground(new java.awt.Color(255, 255, 255));
        b8.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        b8.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), new java.awt.Color(0, 0, 255)));
        b8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b7.setBackground(new java.awt.Color(255, 255, 255));
        b7.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        b7.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), new java.awt.Color(0, 0, 255)));
        b7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b7.setMaximumSize(new java.awt.Dimension(80, 80));
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b1.setBackground(new java.awt.Color(255, 255, 255));
        b1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        b1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), new java.awt.Color(0, 0, 255)));
        b1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        tit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        titulo.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        titulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gato/gatoLabel.gif"))); // NOI18N

        javax.swing.GroupLayout jcMousePanel1Layout = new javax.swing.GroupLayout(jcMousePanel1);
        jcMousePanel1.setLayout(jcMousePanel1Layout);
        jcMousePanel1Layout.setHorizontalGroup(
            jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jcMousePanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jcMousePanel1Layout.createSequentialGroup()
                        .addComponent(pnlResultado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlResultado2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jcMousePanel1Layout.createSequentialGroup()
                        .addComponent(titulo)
                        .addGap(50, 50, 50))
                    .addGroup(jcMousePanel1Layout.createSequentialGroup()
                        .addGroup(jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jcMousePanel1Layout.createSequentialGroup()
                                .addGroup(jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jcMousePanel1Layout.createSequentialGroup()
                                        .addGroup(jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jcMousePanel1Layout.createSequentialGroup()
                                        .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelCurves2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jcMousePanel1Layout.setVerticalGroup(
            jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jcMousePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlResultado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlResultado2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(tit, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jcMousePanel1Layout.createSequentialGroup()
                        .addGroup(jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jcMousePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(panelCurves2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gato/inicio.png"))); // NOI18N
        jMenu1.setText("Inicio");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        cerrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/inicio2.png"))); // NOI18N
        cerrar.setText("Menú Principal");
        cerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });
        jMenu1.add(cerrar);

        jMenuBar1.add(jMenu1);

        opciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gato/opcion.png"))); // NOI18N
        opciones.setText("Opciones");
        opciones.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        opciones.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        nuevoJ.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        nuevoJ.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gato/ngato.png"))); // NOI18N
        nuevoJ.setText("Nueva Partida");
        nuevoJ.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nuevoJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoJActionPerformed(evt);
            }
        });
        opciones.add(nuevoJ);

        limpiar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gato/limpia.png"))); // NOI18N
        limpiar.setText("Vaciar Tabla");
        limpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });
        opciones.add(limpiar);

        tuto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tuto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/in.png"))); // NOI18N
        tuto.setText("Tutorial");
        tuto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tutoActionPerformed(evt);
            }
        });
        opciones.add(tuto);

        terminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        terminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gato/terminar.png"))); // NOI18N
        terminar.setText("Terminar Juego");
        terminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        terminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminarActionPerformed(evt);
            }
        });
        opciones.add(terminar);

        jMenuBar1.add(opciones);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jcMousePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jcMousePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
        inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
        inicio.play();
        int seleccion = JOptionPane.showConfirmDialog(null, "   Los datos de la partida actual se\nperderan si regresa al menú principal\n"
                + "\n          ¿Desea continuar?",
                "Gato",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                new javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/inicio1.png")));
        inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
        inicio.play();

        if (seleccion == 0) {
            this.dispose();
            Ventana v = new Ventana();
            v.setVisible(true);
        }
    }//GEN-LAST:event_cerrarActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        byte numero = 0;
        this.numeroClikeado(numero);
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        byte numero = 1;
        this.numeroClikeado(numero);
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        byte numero = 2;
        this.numeroClikeado(numero);
    }//GEN-LAST:event_b3ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        byte numero = 3;
        this.numeroClikeado(numero);
    }//GEN-LAST:event_b4ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        byte numero = 4;
        this.numeroClikeado(numero);
    }//GEN-LAST:event_b5ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        byte numero = 6;
        this.numeroClikeado(numero);
    }//GEN-LAST:event_b7ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
        byte numero = 8;
        this.numeroClikeado(numero);
    }//GEN-LAST:event_b9ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        byte numero = 7;
        this.numeroClikeado(numero);
    }//GEN-LAST:event_b8ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        byte numero = 5;
        this.numeroClikeado(numero);
    }//GEN-LAST:event_b6ActionPerformed

    private void nuevoJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoJActionPerformed
        inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
        inicio.play();
        int seleccion = JOptionPane.showConfirmDialog(null, "           Si inicia una partida nueva\nlos datos de la partida actual se perderan.\n"
                + "\n               ¿Desea continuar?",
                "Gato",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null);
        inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
        inicio.play();
        if (seleccion == 0) {
            dispose();
                Jugadores j = new Jugadores();
                j.setVisible(true);
//            JOptionPane.showMessageDialog(null, "   ¡¡¡A jugar!!!"
//                    + "\nmucha suerte");
//            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/alfabeto/2.mp3"));
//            inicio.play();
//            tit.setText("¡¡¡ Que Gane El Mejor !!!");
//
//            // cada ves q se abre un juego nuevo, empiesa el jugador 1
//            tit.setText("Tú turno " + this.jugador1.getNombre());
//            tit.setForeground(Color.yellow);
//
//            this.titulo.setVisible(true);
            LimpiarTablero();
        }
    }//GEN-LAST:event_nuevoJActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
        inicio.play();
        LimpiarTablero();
    }//GEN-LAST:event_limpiarActionPerformed

    private void tutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tutoActionPerformed
        inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
        inicio.play();
        JOptionPane.showMessageDialog(null, "El juego del Gato tiene 9 posiciones"
                + "\nmarcas con un numero cada una, cada ves "
                + "\nque le des clic a una posición"
                + "\naperecera 'X' en color amarillo si eres el jugador 1"
                + "\no 'O' en color verde si eres el jugador 2, "
                + "\nel objetivo es tratar de alinear de forma vertical,"
                + "\nhorizontal o diagonal 3 figuras iguales, "
                + "\nel jugador que logre alinear las 3"
                + "\nfiguras obtendra un punto,"
                + "\nlos puntos son acumulativos"
                + "\ny gana el jugador que logre mas puntos."
                + "\nSi en la partida no se alinean las figuras"
                + "\nse mostrara un mensaje de empate,"
                + "\nsi los jugadores ven que nadie puede alinear "
                + "\nlas 3 figuras en una partida, "
                + "\npueden pulsar la opción (Limpiar Tabla ) que se encuentra"
                + "\nen la pestaña Opciones,"
                + "\nesta accion limpia las posiciones y no se afecta el turno"
                + "\nni los puntos de los jugadores, si uno de los "
                + "\njugador quiere retar a otra persona,"
                + "\ndebe que pulsar la opción (Nuevo juego) que se encuentra,"
                + "\nen la pestaña Opciones, esto"
                + "\nrestablese el tablero desde el principio"
                + "\ny queda listo para una nueva partida......"
                + "\nA jugar!!!", "Gato", JOptionPane.INFORMATION_MESSAGE);
        inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
        inicio.play();
    }//GEN-LAST:event_tutoActionPerformed

    private void terminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminarActionPerformed
        inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
        inicio.play();
        int seleccion = JOptionPane.showConfirmDialog(null, "Si termina la partida actual\n    los datos se perderan.\n"
                + "\n       ¿Desea continuar?",
                "Gato",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null);
        inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
        inicio.play();
        if (seleccion == 0) {
            int seleccio = JOptionPane.showConfirmDialog(null, "¿Empezar Partida Nueva?",
                    "Gato",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null);
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
            inicio.play();
            if (seleccio == 0) {
                dispose();
                Jugadores j = new Jugadores();
                j.setVisible(true);
//                jug1.setText("Jugador 1:");
//                jug2.setText("Jugador 2:");
//                tit.setText("");
//                this.LimpiarTablero();
//                this.jugador1.setPuntos(0);
//                this.jugador2.setPuntos(0);
//                this.LimpiarTablero();

            } else {
                JOptionPane.showMessageDialog(null, "¡ Gracias por jugar !","Gato",JOptionPane.INFORMATION_MESSAGE);
                inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
                inicio.play();
                this.dispose();
                Ventana v = new Ventana();
                v.setVisible(rootPaneCheckingEnabled);
            }

        }
    }//GEN-LAST:event_terminarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
                inicio.play();
        close();
    }//GEN-LAST:event_formWindowClosing
private void close() {
        if (JOptionPane.showConfirmDialog(rootPane, "¿Salir de la aplicación?",
                "Gato", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE) == JOptionPane.YES_OPTION) {
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
                inicio.play();
            System.exit(0);
        } else {
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato2.mp3"));
                inicio.play();
            setDefaultCloseOperation(0);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tablero().setVisible(true);
            }
        });
    }

    private void hayGanador() {

        //------COMPARACIONES HORIZONTALES----\\
        if (this.b1.getName().equals(this.b2.getName()) && this.b1.getName().equals(this.b3.getName())) {
            this.b1.setBackground(Color.yellow);
            this.b2.setBackground(Color.yellow);
            this.b3.setBackground(Color.yellow);
            this.ganador = true;
        }
        if (this.b4.getName().equals(this.b5.getName()) && this.b4.getName().equals(this.b6.getName())) {
            this.b4.setBackground(Color.yellow);
            this.b5.setBackground(Color.yellow);
            this.b6.setBackground(Color.yellow);
            this.ganador = true;
        }
        if (this.b7.getName().equals(this.b8.getName()) && this.b7.getName().equals(this.b9.getName())) {
            this.b7.setBackground(Color.yellow);
            this.b8.setBackground(Color.yellow);
            this.b9.setBackground(Color.yellow);
            this.ganador = true;
        }

        //------COMPARACIONES VERTICALES----\\
        if (this.b1.getName().equals(this.b4.getName()) && this.b1.getName().equals(this.b7.getName())) {
            this.b1.setBackground(Color.yellow);
            this.b4.setBackground(Color.yellow);
            this.b7.setBackground(Color.yellow);
            this.ganador = true;
        }
        if (this.b2.getName().equals(this.b5.getName()) && this.b2.getName().equals(this.b8.getName())) {
            this.b2.setBackground(Color.yellow);
            this.b5.setBackground(Color.yellow);
            this.b8.setBackground(Color.yellow);
            this.ganador = true;
        }
        if (this.b3.getName().equals(this.b6.getName()) && this.b3.getName().equals(this.b9.getName())) {
            this.b3.setBackground(Color.yellow);
            this.b9.setBackground(Color.yellow);
            this.b6.setBackground(Color.yellow);
            this.ganador = true;
        }

        //------COMPARACIONES DIAGONALES----\\
        if (this.b1.getName().equals(this.b5.getName()) && this.b1.getName().equals(this.b9.getName())) {
            this.b1.setBackground(Color.yellow);
            this.b5.setBackground(Color.yellow);
            this.b9.setBackground(Color.yellow);
            this.ganador = true;
        }
        if (this.b7.getName().equals(this.b5.getName()) && this.b7.getName().equals(this.b3.getName())) {
            this.b7.setBackground(Color.yellow);
            this.b5.setBackground(Color.yellow);
            this.b3.setBackground(Color.yellow);
            this.ganador = true;
        }

        if (this.ganador) {
            ganador();
        }

        if (this.empate == 9 && ganador == false) {

            JOptionPane.showMessageDialog(null, "Empate!!!", "Gato", 0,
                    new javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/empa.png")));
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
            inicio.play();
            //Se empieza una nueva partida
            if (turno) {
                turno = false;
            } else {
                turno = true;
            }

            int seleccion = JOptionPane.showConfirmDialog(null, "¿Quieren jugar otra partida?", "Gato",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null);
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
            inicio.play();
            if (seleccion == 0) {
                LimpiarTablero();
            } else {
                this.mostrarResultadoFinal();
                JOptionPane.showMessageDialog(null, "¡ Gracias por jugar !");
                inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
                inicio.play();
                this.dispose();
                Ventana v = new Ventana();
                v.setVisible(rootPaneCheckingEnabled);

            }
        }
    }

    /**
     * Mostramos el resultado cada ves que sea necesari el resultado se muestra
     * en un JPane
     */
    private void mostrarResultadoFinal() {
        if (this.jugador1.getPuntos() > this.jugador2.getPuntos()) {
            JOptionPane.showMessageDialog(null, "Resultado final."
                    + "\n" + this.jug1.getText() + ": " + this.jugador1.getPuntos()
                    + "\n" + this.jug2.getText() + ": " + this.jugador2.getPuntos()
                    + "\n¡Has Ganado! " + this.jug1.getText(), "Gato", 0,
                    new javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/j2.png")));
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
            inicio.play();
        } else {
            if (this.jugador1.getPuntos() < this.jugador2.getPuntos()) {
                JOptionPane.showMessageDialog(null, "Resultado final."
                        + "\n" + this.jug1.getText() + ": " + this.jugador1.getPuntos()
                        + "\n" + this.jug2.getText() + ": " + this.jugador2.getPuntos()
                        + "\n¡Has Ganado! " + this.jug2.getText(), "Gato", 0,
                        new javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/j1.png")));
                inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
                inicio.play();
            }
            if (validarEmpate()) {
                JOptionPane.showMessageDialog(null, "Resultado final."
                        + "\n" + this.jug1.getText() + ": " + this.jugador1.getPuntos()
                        + "\n" + this.jug2.getText() + ": " + this.jugador2.getPuntos()
                        + "\nEmpate !!! ", "Gato", 0, new javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/empa.png")));
                inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
                inicio.play();
            }
        }
    }

    /**
     * Cuando hay un ganador
     */
    private void ganador() {
        int seleccion = 2; // para el JOptionPane.showConfirmDialog

        this.tiempo.restart();
        this.ganador = true;

        if (turno) {

            this.jugador1.setPuntos(this.jugador1.getPuntos() + 1);
            victoria = java.applet.Applet.newAudioClip(getClass().getResource("/gato/victoria.wav"));
            victoria.play();
            JOptionPane.showMessageDialog(null, this.jug1.getText() + ", has Ganado ¡FELICITACIONES!", "Gato", 0,
                    new javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/j2.png")));
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
            inicio.play();
            victoria.stop();
            perdio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/fallo.wav"));
            perdio.play();
            JOptionPane.showMessageDialog(null, this.jug2.getText() + ", has Perdido", "Gato", 0, new
        javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/pj2.png")));
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
            inicio.play();
            perdio.stop();
            res1.setText(Integer.toString(this.jugador1.getPuntos()));

            seleccion = JOptionPane.showConfirmDialog(null, "¿Quieren jugar otra partida?", "Gato",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null);
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
            inicio.play();
        } else {

            this.jugador2.setPuntos(this.jugador2.getPuntos() + 1);

            victoria = java.applet.Applet.newAudioClip(getClass().getResource("/gato/victoria.wav"));
            victoria.play();
            JOptionPane.showMessageDialog(null, this.jug2.getText() + ", has Ganado ¡FELICITACIONES!", "Gato", 0,
                    new javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/j1.png")));
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
            inicio.play();
            victoria.stop();
            perdio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/fallo.wav"));
            perdio.play();
            JOptionPane.showMessageDialog(null, this.jug1.getText() + ", has Perdido", "Gato", 0,
                    new javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/pj1.png")));
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
            inicio.play();
            perdio.stop();
            res2.setText(Integer.toString(this.jugador2.getPuntos()));

            seleccion = JOptionPane.showConfirmDialog(null, "¿Quieren jugar otra partida?", "Gato",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null);
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
            inicio.play();
        }

        if (seleccion == 0) {

            this.ganador = false;
            this.LimpiarTablero();
            tiempo.restart();
        } else {

            this.mostrarResultadoFinal();
            JOptionPane.showMessageDialog(null, "¡ Gracias por jugar !");
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
            inicio.play();
            this.dispose();
            new Jugadores().setVisible(true);
        }
    }

    /**
     * Limpiamos el tablero
     */
    public void LimpiarTablero() {

        tit.setText("");

        tiempo.restart();

        empate = 0;

        if (turno) {
            tit.setText("Tú turno " + this.jug1.getText());
            tit.setForeground(Color.yellow);
        } else {
            tit.setText("Tú turno " + this.jug2.getText());
            tit.setForeground(Color.green);
        }
    }

    /**
     * verificar si hay empate general de puntos entre los jugadores
     *
     * @return : true si no hay empate, false si hay empate
     */
    private boolean validarEmpate() {

        if (this.jugador1.getPuntos() == this.jugador2.getPuntos()) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * Muestra en el tablero el jugador que debe tirar o jugar una partida
     */
    private void validarTurno() {

        if (turno) {

            tit.setText("Tú turno " + this.jug1.getText());
            tit.setForeground(Color.yellow);
        } else {

            tit.setText("Tú turno " + this.jug2.getText());
            tit.setForeground(Color.green);
        }
    }

    /**
     * coloca la 'X' o el 'O' dependiendo el numero dode se de clik
     *
     * @param numeroLabel: 'numero' unico de caga Numero cuando es clikeado
     */
    public void numeroClikeado(byte numeroLbl) {

        byte numeroAuxiliar = (byte) (numeroLbl + 1);//Numero auxiliar para comparar el Numero string del 'name' de los botones

        if (this.btnNumero[numeroLbl].getName().equals(Byte.toString(numeroAuxiliar))) {

            if (turno) {
                this.btnNumero[numeroLbl].setName("x");
                this.btnNumero[numeroLbl].setText("");
                inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
                inicio.play();
                this.btnNumero[numeroLbl].setIcon(new javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/x.png")));

                hayGanador();

                empate++;

                turno = false;

            } else {

                this.btnNumero[numeroLbl].setName("o");
                this.btnNumero[numeroLbl].setText("");
                inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
                inicio.play();
                this.btnNumero[numeroLbl].setIcon(new javax.swing.ImageIcon(getClass().getResource("/gato/imagenes/o.png")));

                hayGanador();

                empate++;

                turno = true;
            }

            validarTurno();

        } else {
            JOptionPane.showMessageDialog(null, "La casilla esta ocupada\nintente con otra");
            inicio = java.applet.Applet.newAudioClip(getClass().getResource("/gato/2.mp3"));
            inicio.play();
        }
    }

    /**
     * pedir nombre de los jugadores antes de empesar a jugar o cada ves que se
     * juegue una nueva partida si no lo ingresan no se dejan seguir
     */
    /**
     * Clase interna que se encarga de limpiar osbotones y hacer efectos de
     * barrido en los botones
     *
     * @author :caros mario montaño lopera 04/10/2012
     */
    public class ClaseTimer implements ActionListener {

        byte posicion = 0;
        boolean recorrido = false;
        boolean recorridoRojo = false;
        boolean recorridoAmarillo = false;
        boolean recorridoVerde = false;
        boolean recorridoAzul = true;
        boolean efecto1 = true;

        @Override
        public void actionPerformed(ActionEvent e) {

            if (ganador) {
                efectoGanador();
            }

            if (!ganador) {
                this.limpiarBotonesBarrido();
            }

        }

        /**
         * limpia los botones con un efecto de barrido y asigna de nuevo los
         * valores String al atributo 'name' de cada boton....
         */
        public void limpiarBotonesBarrido() {            
            if (!this.recorrido && this.posicion < btnNumero.length) {
                if (!this.recorridoAmarillo) {
                    btnNumero[posicion].setBackground(Color.yellow);
                } else {
                    btnNumero[posicion].setBackground(Color.green);
                }
                btnNumero[posicion].setIcon(null);
                btnNumero[posicion].setText("");
                posicion++;
            } else {
                this.recorrido = true;
            }

            if (posicion >= 0 && this.recorrido) {
                btnNumero[posicion - 1].setBackground(Color.white);
                btnNumero[posicion - 1].setText(Byte.toString(posicion));
                btnNumero[posicion - 1].setName(Byte.toString(posicion));
                posicion--;
            }

            if (this.posicion == 0) {
                tiempo.stop();
                this.posicion = 0;
                this.recorrido = false;

                //definimo si el barrido sera en color rojo o azul
                if (this.recorridoVerde) {
                    this.recorridoVerde = false;
                    this.recorridoAmarillo = true;
                } else {
                    this.recorridoVerde = true;
                    this.recorridoAmarillo = false;
                }
            }
        }

        /**
         * Efecto de luz parpadeante cuando aguein gana
         */
        public void efectoGanador() {
            if (this.efecto1) {
                for (byte x = 0; x < btnNumero.length; x++) {
                    if (btnNumero[x].getBackground() == Color.yellow) {
                        btnNumero[x].setBackground(Color.lightGray);
                        this.efecto1 = false;
                    }
                }
            } else {
                for (byte x = 0; x < btnNumero.length; x++) {
                    //esta comparacionn por que hay veces el efecto1 es true cuando el color es orange
                    if (btnNumero[x].getBackground() == Color.lightGray || btnNumero[x].getBackground() == Color.yellow) {
                        btnNumero[x].setBackground(Color.yellow);
                        this.efecto1 = true;
                    }
                }
            }
        }
    }

    /**
     * look and feel del tablero
     */
    static {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                // Solo estilo por nombre Nimbus
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JMenuItem cerrar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private jcMousePanel.jcMousePanel jcMousePanel1;
    public javax.swing.JLabel jug1;
    public javax.swing.JLabel jug2;
    private javax.swing.JMenuItem limpiar;
    private javax.swing.JMenuItem nuevoJ;
    private javax.swing.JMenu opciones;
    private org.edisoncor.gui.panel.PanelCurves panelCurves2;
    private javax.swing.JPanel pnlResultado1;
    private javax.swing.JPanel pnlResultado2;
    private javax.swing.JLabel res1;
    private javax.swing.JLabel res2;
    private javax.swing.JMenuItem terminar;
    public javax.swing.JLabel tit;
    private javax.swing.JLabel titulo;
    private javax.swing.JMenuItem tuto;
    // End of variables declaration//GEN-END:variables

}
